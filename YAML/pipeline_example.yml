# Example YAML file for running Pytest and publishing HTML test results report

# Trigger the pipeline when changes are made to the 'main' branch
trigger:
  - main

# Use a Windows VM to execute the test scenarios
pool: windows-latest

# steps plan
steps:
  # First step - choosing what python version we are going to use
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.x

  # Second step - Installing required packages for our automation
  - script: |
      pip install selenium pytest
      pip install -r YAML/requirements.txt
      python -m pip install pytest
      python -m pytest
    displayName: 'Install Requirements'

  # Third step - test execution
  # The second script task runs the Pytest tests and saves the test results in JUnit format in a file named test-results.xml in the junit directory.
  - script: | # running the script to execute the test_scenarios full file  
      pytest -v Tests/test_scenarios.py --junitxml=junit/test-results.xml
    displayName: 'Run tests'

  # Fourth step - publishing HTML report of the test results
  - name: Publish test results
    uses: dorny/act@v2
    with:
      args: pytest --junitxml=junit/test-results.xml --html=report.html
    displayName: 'Publish HTML test results report'

  # Fifth step - uploading the HTML report as an artifact
  - name: Upload HTML report
    uses: actions/upload-artifact@v2
    with:
      name: Test Results
      path: report.html
