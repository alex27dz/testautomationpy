# name of the branch that we are going to use taken from GitHub
trigger:
  - main

# type of the VM that is going to execute the test_ scenarios
pool: windows-latest

# steps plan
steps:
  # First step - choosing what python version we are going to use
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.x

  # Second step - Installing required packages for our automation
  - script: |
      pip install selenium pytest
      pip install -r YAML/requirements.txt
      python -m pip install pytest
      python -m pytest
    displayName: 'Install Requirements'

  # Third step - test execution
  
  # The second script task runs the Pytest tests and saves the test results in JUnit format in a file named test-results.xml in the junit directory.
  - script: | # running the script to execute the test_scenarios full file  
      pytest -v Tests/test_scenarios.py --junitxml=junit/test-results.xml--html=report.html
        mv report.html ${{ github.workspace }}/test_results
    displayName: 'Run tests'
        
  - task: Publish HTML report
    uses: actions/upload-artifact@v2
    with:
      name: Test Results
      path: ${{ github.workspace }}/test_results
