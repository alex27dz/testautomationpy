# Example YAML file for running Pytest and publishing HTML test results report

# Trigger the pipeline when changes are made to the 'main' branch
trigger:
  - main

# Use a Windows VM to execute the test scenarios
pool: windows-latest

# Define the pipeline steps
steps:
  # Choose Python 3.x as the Python version
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.x

  # Install required packages for the automation
  - script: |
      pip install selenium pytest
      pip install -r YAML/requirements.txt
      python -m pip install pytest
    displayName: 'Install Requirements'

  # Run the tests and output the results in JUnit format
  - script: |
      pytest -v Tests/test_scenarios.py --junitxml=junit/test-results.xml
    displayName: 'Run Tests'

  # Publish the test results and generate the HTML report
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit/test-results.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: 'Pytest Results'
    displayName: 'Publish Test Results and Generate HTML Report'

  # Upload the HTML report as an artifact
  - name: Upload HTML report
    uses: actions/upload-artifact@v2
    with:
      name: 'HTML Report'
      path: 'report.html'
    displayName: 'Upload HTML Report'
